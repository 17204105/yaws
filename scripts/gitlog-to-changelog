#!/bin/bash

# The list of blacklisted tags
blacklisted_tags=(
    yaws-erlang-18
);

# Format string used to print the title line of a commit
log_title_fmt=$(cat <<EOF
  <div class="git-commit">
    [<a href="https://github.com/klacke/yaws/commit/%h" target="_blank">%h</a>]
  </div>
  <div class="git-title-msg" onclick="toggleVisibility('#msg-%h');">
    %s
  </div>
  <div class="git-info" onclick="toggleVisibility('#msg-%h');">
    // %an
  </div>
EOF
)

# Get current tag name: Use $1 if defined else the last one
curtag=$(git describe --abbrev=0 --tags ${1:-HEAD^} 2>/dev/null)
if [[ $? != 0 ]]; then
    echo "Tag ${curtag} not found"
    exit -1
elif [[ "${blacklisted_tags[@]}" =~ "${curtag}" ]]; then
    echo "Tag ${curtag} is blacklisted"
    exit -1
fi

# Get the tag name preceding the current one. If not defined, because the
# current one is the first tag, we get the first commit hash
prevtag=${curtag}
while [[ ${prevtag} = ${curtag} || "${blacklisted_tags[@]}" =~ "${prevtag}" ]]; do
    prevtag=$(git describe --abbrev=0 --tags ${prevtag}^ 2>/dev/null)
    if test $? -ne 0; then
        prevtag=$(git rev-list --max-parents=0 HEAD 2>/dev/null)
        if [[ $? != 0 ]]; then
            echo "Previous tag of ${curtag} not found"
            exit -1
        fi
        break
    fi
done

# Print the changelog itself
for c in $(git log ${prevtag}..${curtag} --format='%h'); do
    title=$(git show $c -s --format="${log_title_fmt}")
    author=$(git show $c -s --format="%an &lt;%ae&gt;")
    date=$(git show $c -s --format="%ad" --date="local")
    body=$(git show $c -s --format="%B" | sed -e  "s/</\&lt;/g" -e  "s/>/\&gt;/g")
    cat <<EOF
<div class="git-log">
${title}
  <div id="msg-${c}" class="git-body-msg" style="display: none;" onclick="toggleVisibility('#msg-${c}');">
    <pre>
<strong>Author: ${author}</strong>
<strong>Date:   ${date}</strong>

${body}
    </pre>
  </div>
</div>
EOF
done
